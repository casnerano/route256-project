version: "3.1"

services:
  cart:
    image: cart
    build: ./cart
    ports:
      - "3201:3200"
      - "8081:8080"
    depends_on:
      migration:
        condition: service_completed_successfully
      loms:
        condition: service_started
      pim_rate_limiter:
        condition: service_started
    networks:
      - internal

  loms:
    image: loms
    build: ./loms
    ports:
      - "3202:3200"
      - "8082:8080"
    depends_on:
      migration:
        condition: service_completed_successfully
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    networks:
      - internal

  migration:
    image: migration
    build:
      context: ./
      dockerfile: ./infrastructure/migration/Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_CART=${POSTGRES_DB_CART}
      - POSTGRES_DB_LOMS=${POSTGRES_DB_LOMS}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - internal

  postgres:
    image: postgres:latest
    environment:
      - TZ=Europe/Moscow
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_CART=${POSTGRES_DB_CART}
      - POSTGRES_DB_LOMS=${POSTGRES_DB_LOMS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infrastructure/postgres/initdb/:/docker-entrypoint-initdb.d
    healthcheck:
      test: "pg_isready -d ${POSTGRES_DB_CART} -U ${POSTGRES_USER} && \ pg_isready -d ${POSTGRES_DB_LOMS} -U ${POSTGRES_USER}"
      interval: 5s
      timeout: 3s
    networks:
      - internal

  pgbouncer:
    image: edoburu/pgbouncer
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=postgres
      - POOL_MODE=transaction
      - AUTH_TYPE=scram-sha-256
      - MAX_PREPARED_STATEMENTS=10
    ports:
      - "5432:5432"
    depends_on:
      - postgres
    networks:
      - internal

  pim_rate_limiter:
    image: pim_rate_limiter
    build: ./limiter
    ports:
      - "3000:3000"
    networks:
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 10s
      retries: 3
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - internal

  kafka-1:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTNERS: LISTNER_INT://kafka-1:29091,LISTENER_EXT://0.0.0.0:9091
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka-1:29091,LISTENER_EXT://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
      ZOOKEEPER: zookeeper:2181
    networks:
      - internal

  kafka-2:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTNERS: LISTNER_INT://kafka-2:29092,LISTENER_EXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka-2:29092,LISTENER_EXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
      ZOOKEEPER: zookeeper:2181
    networks:
      - internal

  kafka-3:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: ps augwwx | egrep upportedKafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTNERS: LISTNER_INT://kafka-3:29093,LISTENER_EXT://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTNER_INT://kafka-3:29093,LISTENER_EXT://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTNER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTNER_INT
      ZOOKEEPER: zookeeper:2181
    networks:
      - internal

volumes:
  postgres-data:
    driver: local

networks:
  internal:
    driver: bridge

  # notification:
  #   image: notification
  #   build: ./notification
  #   ports:
  #     - "8082:8082"
