syntax = "proto3";

package route256.loms.api.v1.order;

option go_package = "pkg/proto/order/v1;order";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Order service";
    version: "1.0";
    contact: {
      name: "Arutyunyan A.";
      url: "https://gitlab.ozon.dev/7876010/go-8-middle-project";
      email: "7876010@mail.ru";
    }
  }

  external_docs: {
    url: "https://gitlab.ozon.dev/7876010/go-8-middle-project/-/tree/main/docs";
    description: "Detail documentation on services.";
  }

  schemes: HTTP;
  schemes: HTTPS;

  consumes: "application/json";
  produces: "application/json";
};

message Item {
  uint64 sku = 1;
  uint32 count = 2;
}

enum Status {
    NEW = 0;
    AWAIT_PAYMENT = 1;
    FAILED = 2;
    PAYED = 3;
    CANCELED = 4;
}

message PayRequest {
  uint64 order_id = 1;
}

message PayResponse { }

message InfoRequest {
  uint64 order_id = 1;
}

message InfoResponse {
  Status status = 1;
  uint64 user = 2;
  repeated Item items = 3;
}

message CreateRequest {
  uint64 user = 1;
  repeated Item items = 2 [(validate.rules).repeated = {min_items: 1}];
}

message CreateResponse {
  uint64 order_id = 1;
}

message CancelRequest {
  uint64 order_id = 1;
}

message CancelResponse { }

service Order {
  rpc Pay(PayRequest) returns (PayResponse) {
    option (google.api.http) = {
      post: "/v1/order/pay",
      body: "*"
    };
  };

  rpc Info(InfoRequest) returns (InfoResponse) {
    option (google.api.http) = {
      get: "/v1/order/info/{order_id}"
    };
  };

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/order/create",
      body: "*"
    };
  };

  rpc Cancel(CancelRequest) returns (CancelResponse) {
    option (google.api.http) = {
      put: "/v1/order/cancel/{order_id}"
    };
  };
}